preparing vectors...Hang Tight...
[9.0, 73.0, 73.0, 0.0, 100.0, 8.5, 17.0, 17.0, 0.0, 100.0, 3.7, 102338.0, 81.0, 482.2]
type of array:<class 'numpy.ndarray'>
Vectors prepared.
Applying KMeans Clustering to vectors...Hang Tight...
KMeans applied, clusters formed
Predicting labels...Hang Tight...
Writing to file...
Done...File saved to current Directory
None
         357845 function calls (357794 primitive calls) in 33.109 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.000    0.000 :0(__subclasses__)
        2    0.000    0.000    0.000    0.000 :0(__subclasshook__)
        1    0.000    0.000    0.000    0.000 :0(_getdefaultlocale)
        4    0.000    0.000    0.000    0.000 :0(add)
   153008    0.312    0.000    0.312    0.000 :0(append)
       49    0.000    0.000    0.000    0.000 :0(arange)
     6676    0.016    0.000    0.016    0.000 :0(array)
      299    0.000    0.000    0.000    0.000 :0(astype)
       11    0.000    0.000    0.000    0.000 :0(can_cast)
     1979    0.109    0.000    0.109    0.000 :0(charmap_decode)
       10    0.000    0.000    0.000    0.000 :0(charmap_encode)
        1    0.000    0.000    0.000    0.000 :0(coo_tocsr)
       99    0.016    0.000    0.016    0.000 :0(coo_todense)
      106    0.000    0.000    0.000    0.000 :0(copy)
       51    0.000    0.000    0.000    0.000 :0(copyto)
       49    0.047    0.001    0.047    0.001 :0(csc_tocsr)
       50    0.000    0.000    0.000    0.000 :0(csr_has_canonical_format)
       49    0.000    0.000    0.000    0.000 :0(csr_has_sorted_indices)
       98    0.031    0.000    0.031    0.000 :0(csr_matmat_pass1)
       98    0.078    0.001    0.078    0.001 :0(csr_matmat_pass2)
        1    0.000    0.000    0.000    0.000 :0(csr_matvec)
        1    0.000    0.000    0.000    0.000 :0(csr_mean_variance_axis0)
       50    0.000    0.000    0.047    0.001 :0(csr_row_norms)
       49    0.000    0.000    0.000    0.000 :0(csr_sort_indices)
       49    0.000    0.000    0.000    0.000 :0(csr_sum_duplicates)
       49    0.016    0.000    0.016    0.000 :0(cumsum)
        2    0.000    0.000    0.000    0.000 :0(einsum)
      592    0.000    0.000    0.000    0.000 :0(empty)
        3    0.000    0.000    0.000    0.000 :0(empty_like)
        1    0.000    0.000   33.109   33.109 :0(exec)
       99    0.000    0.000    0.000    0.000 :0(expandptr)
      150    0.000    0.000    0.000    0.000 :0(get)
       50    0.000    0.000    0.000    0.000 :0(get_csr_submatrix)
      402    0.000    0.000    0.000    0.000 :0(getattr)
     1111    0.000    0.000    0.000    0.000 :0(hasattr)
      150    0.000    0.000    0.000    0.000 :0(hash)
       50    0.000    0.000    0.000    0.000 :0(indices)
   142758    0.391    0.000    0.391    0.000 :0(isdigit)
     5060    0.031    0.000    0.031    0.000 :0(isinstance)
      102    0.000    0.000    0.000    0.000 :0(issubclass)
        1    0.000    0.000    0.000    0.000 :0(iter)
      102    0.000    0.000    0.000    0.000 :0(join)
     6029    0.000    0.000    0.000    0.000 :0(len)
      895    0.000    0.000    0.000    0.000 :0(max)
      296    0.000    0.000    0.031    0.000 :0(min)
      550    0.000    0.000    0.000    0.000 :0(newbyteorder)
        1    0.000    0.000    0.000    0.000 :0(next)
        1    0.000    0.000    0.000    0.000 :0(nonzero)
        1    0.000    0.000    0.000    0.000 :0(open)
        5    0.000    0.000    0.000    0.000 :0(print)
        1    0.000    0.000    0.000    0.000 :0(randint)
       49    0.000    0.000    0.000    0.000 :0(random_sample)
      100    0.016    0.000    0.016    0.000 :0(ravel)
        1    0.000    0.000    0.000    0.000 :0(reader)
      941    0.031    0.000    0.031    0.000 :0(reduce)
        2    0.000    0.000    0.000    0.000 :0(remove)
        1    0.000    0.000    0.000    0.000 :0(reshape)
      399    0.000    0.000    0.000    0.000 :0(rpartition)
       49    0.000    0.000    0.000    0.000 :0(searchsorted)
      348    0.000    0.000    0.000    0.000 :0(sum)
        2    0.000    0.000    0.000    0.000 :0(transpose)
      102    0.016    0.000    0.016    0.000 :0(zeros)
      399    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:402(parent)
      399    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:989(_handle_fromlist)
        1    0.000    0.000   33.109   33.109 <string>:1(<module>)
        1    0.000    0.000   30.516   30.516 KMeans.py:19(classify)
        1    0.000    0.000   33.109   33.109 KMeans.py:49(apply)
        1    0.000    0.000    2.594    2.594 KMeans.py:9(__init__)
        1    0.000    0.000    0.000    0.000 Vectorizer.py:16(__init__)
        1    0.000    0.000    0.000    0.000 Vectorizer.py:20(openFile)
        1    1.719    1.719    2.500    2.500 Vectorizer.py:35(makeDocuments)
        1    0.016    0.016    0.078    0.078 Vectorizer.py:71(getParamDocList)
        1    0.000    0.000    2.594    2.594 Vectorizer.py:86(prepare)
        1    0.000    0.000    0.000    0.000 _bootlocale.py:11(getpreferredencoding)
        1    0.000    0.000    0.000    0.000 _k_means.pyx:108(__pyx_fuse_1_assign_labels_csr (wrapper))
        1    0.000    0.000    0.000    0.000 _k_means.pyx:108(__pyx_fuse_1_assign_labels_csr)
        1    0.000    0.000    0.000    0.000 _k_means.pyx:108(_assign_labels_csr)
      296    0.000    0.000    0.000    0.000 _methods.py:25(_amax)
      296    0.000    0.000    0.031    0.000 _methods.py:28(_amin)
      348    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
        1    0.000    0.000    0.000    0.000 _methods.py:43(_count_reduce_items)
        1    0.000    0.000    0.000    0.000 _methods.py:53(_mean)
        2    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        2    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        2    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        2    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        5    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
       10    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
        2    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
        4    0.000    0.000    0.000    0.000 abc.py:178(__instancecheck__)
        2    0.000    0.000    0.000    0.000 abc.py:194(__subclasscheck__)
     1111    0.000    0.000    0.000    0.000 base.py:1081(isspmatrix)
     2345    0.016    0.000    0.031    0.000 base.py:181(nnz)
       99    0.000    0.000    0.078    0.001 base.py:236(asformat)
       99    0.016    0.000    0.266    0.003 base.py:326(__mul__)
        1    0.000    0.000    0.000    0.000 base.py:413(__rmul__)
      299    0.000    0.000    0.016    0.000 base.py:545(__getattr__)
      550    0.000    0.000    0.000    0.000 base.py:70(__init__)
      550    0.031    0.000    0.031    0.000 base.py:77(set_shape)
     3593    0.000    0.000    0.000    0.000 base.py:99(get_shape)
       99    0.000    0.000    0.016    0.000 base.py:998(_process_toarray_args)
        1    0.000    0.000    0.000    0.000 codecs.py:259(__init__)
       49    0.000    0.000    0.000    0.000 compressed.py:1012(sort_indices)
      499    0.031    0.000    0.062    0.000 compressed.py:1021(prune)
       52    0.000    0.000    0.031    0.001 compressed.py:1041(_with_data)
      100    0.000    0.000    0.000    0.000 compressed.py:116(_set_self)
      450    0.000    0.000    0.047    0.000 compressed.py:127(check_format)
  450/399    0.031    0.000    0.203    0.001 compressed.py:24(__init__)
        1    0.000    0.000    0.000    0.000 compressed.py:445(_mul_vector)
       98    0.016    0.000    0.250    0.003 compressed.py:471(_mul_sparse_matrix)
       99    0.000    0.000    0.000    0.000 compressed.py:905(tocoo)
       99    0.000    0.000    0.047    0.000 compressed.py:918(toarray)
       51    0.000    0.000    0.000    0.000 compressed.py:936(__get_has_canonical_format)
       99    0.000    0.000    0.000    0.000 compressed.py:957(__set_has_canonical_format)
       51    0.000    0.000    0.016    0.000 compressed.py:965(sum_duplicates)
       49    0.000    0.000    0.000    0.000 compressed.py:981(__get_sorted)
     2143    0.016    0.000    0.016    0.000 compressed.py:99(getnnz)
      148    0.000    0.000    0.000    0.000 compressed.py:996(__set_sorted)
      100    0.000    0.000    0.016    0.000 coo.py:118(__init__)
      202    0.000    0.000    0.000    0.000 coo.py:186(getnnz)
      100    0.000    0.000    0.016    0.000 coo.py:212(_check)
       99    0.000    0.000    0.047    0.000 coo.py:250(toarray)
        1    0.000    0.000    0.000    0.000 coo.py:301(tocsr)
        1    0.000    0.000    0.000    0.000 coo.py:449(sum_duplicates)
       10    0.000    0.000    0.000    0.000 cp1252.py:18(encode)
     1979    0.016    0.000    0.125    0.000 cp1252.py:22(decode)
        1    0.000    0.000    0.000    0.000 csc.py:112(transpose)
       49    0.000    0.000    0.078    0.002 csc.py:139(tocsr)
      150    0.000    0.000    0.000    0.000 csc.py:215(_swap)
       50    0.000    0.000    0.016    0.000 csr.py:131(transpose)
     1594    0.000    0.000    0.000    0.000 csr.py:231(_swap)
       99    0.000    0.000    0.094    0.001 csr.py:236(__getitem__)
       49    0.000    0.000    0.000    0.000 csr.py:237(asindices)
       49    0.000    0.000    0.016    0.000 csr.py:250(check_bounds)
       49    0.000    0.000    0.016    0.000 csr.py:264(extractor)
       50    0.000    0.000    0.031    0.001 csr.py:368(_get_row_slice)
       50    0.000    0.000    0.031    0.001 csr.py:411(_get_submatrix)
      100    0.000    0.000    0.016    0.000 csr.py:416(process_slice)
      100    0.000    0.000    0.000    0.000 csr.py:439(check_bounds)
        1    0.000    0.000    0.000    0.000 data.py:1300(normalize)
      550    0.000    0.000    0.000    0.000 data.py:22(__init__)
      848    0.000    0.000    0.000    0.000 data.py:25(_get_dtype)
       51    0.000    0.000    0.016    0.000 data.py:32(_deduped_data)
        1    0.000    0.000    0.000    0.000 data.py:62(_handle_zeros_in_scale)
       51    0.000    0.000    0.047    0.001 data.py:64(astype)
        1    0.000    0.000    0.000    0.000 data.py:70(copy)
       50    0.000    0.000    0.266    0.005 extmath.py:177(safe_sparse_dot)
       52    0.000    0.000    0.047    0.001 extmath.py:59(row_norms)
       49    0.000    0.000    0.000    0.000 fromnumeric.py:1036(searchsorted)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2843(mean)
     1392    0.000    0.000    0.000    0.000 getlimits.py:245(__init__)
       49    0.000    0.000    0.000    0.000 getlimits.py:256(min)
     1343    0.000    0.000    0.000    0.000 getlimits.py:270(max)
        1    0.000    0.000    0.000    0.000 k_means_.py:146(_validate_center_shape)
        1    0.000    0.000    0.000    0.000 k_means_.py:159(_tolerance)
        1    0.000    0.000   30.516   30.516 k_means_.py:168(k_means)
        1    0.000    0.000   30.516   30.516 k_means_.py:404(_kmeans_single_lloyd)
        1    0.016    0.016    0.484    0.484 k_means_.py:45(_k_init)
        1   30.031   30.031   30.031   30.031 k_means_.py:571(_labels_inertia)
        1    0.000    0.000    0.484    0.484 k_means_.py:624(_init_centroids)
        1    0.000    0.000    0.000    0.000 k_means_.py:835(__init__)
        1    0.000    0.000    0.000    0.000 k_means_.py:852(_check_fit_data)
        1    0.000    0.000   30.516   30.516 k_means_.py:871(fit)
       50    0.000    0.000    0.000    0.000 numeric.py:148(ones)
      100    0.000    0.000    0.000    0.000 numeric.py:2064(isscalar)
     5168    0.000    0.000    0.000    0.000 numeric.py:414(asarray)
      156    0.000    0.000    0.000    0.000 numeric.py:484(asanyarray)
        1    0.000    0.000    0.000    0.000 numeric.py:86(zeros_like)
        1    0.000    0.000    0.000    0.000 numerictypes.py:1015(<listcomp>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:1016(<listcomp>)
       49    0.000    0.000    0.000    0.000 numerictypes.py:660(issubclass_)
       49    0.000    0.000    0.000    0.000 numerictypes.py:728(issubdtype)
        2    0.000    0.000    0.000    0.000 numerictypes.py:942(_can_coerce_all)
       14    0.000    0.000    0.000    0.000 numerictypes.py:951(<listcomp>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:964(find_common_type)
       50    0.016    0.000    0.344    0.007 pairwise.py:162(euclidean_distances)
       50    0.000    0.000    0.000    0.000 pairwise.py:33(_return_float_dtype)
       50    0.000    0.000    0.000    0.000 pairwise.py:57(check_pairwise_arrays)
        1    0.000    0.000   33.109   33.109 profile:0(print(KMeans.apply()))
        0    0.000             0.000          profile:0(profiler)
       53    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
        1    0.000    0.000    0.000    0.000 sparsefuncs.py:23(_raise_error_wrong_axis)
        1    0.000    0.000    0.000    0.000 sparsefuncs.py:65(mean_variance_axis)
     1294    0.000    0.000    0.000    0.000 sputils.py:119(get_index_dtype)
       99    0.000    0.000    0.000    0.000 sputils.py:183(isscalarlike)
      347    0.016    0.000    0.016    0.000 sputils.py:188(isintlike)
      149    0.000    0.000    0.000    0.000 sputils.py:20(upcast)
      449    0.016    0.000    0.016    0.000 sputils.py:200(isshape)
      396    0.000    0.000    0.000    0.000 sputils.py:215(issequence)
       99    0.000    0.000    0.000    0.000 sputils.py:227(isdense)
       99    0.000    0.000    0.000    0.000 sputils.py:265(_unpack_index)
       99    0.000    0.000    0.000    0.000 sputils.py:293(_check_ellipsis)
       99    0.000    0.000    0.000    0.000 sputils.py:331(_check_boolean)
        1    0.000    0.000    0.000    0.000 sputils.py:54(upcast_char)
      550    0.000    0.000    0.000    0.000 sputils.py:91(to_native)
      102    0.000    0.000    0.000    0.000 validation.py:111(_num_samples)
      102    0.000    0.000    0.000    0.000 validation.py:132(_shape_repr)
      306    0.000    0.000    0.000    0.000 validation.py:159(<genexpr>)
      100    0.000    0.000    0.000    0.000 validation.py:210(_ensure_sparse_format)
      102    0.000    0.000    0.000    0.000 validation.py:272(check_array)
      102    0.000    0.000    0.000    0.000 validation.py:49(_assert_all_finite)
        4    0.000    0.000    0.000    0.000 validation.py:565(check_random_state)
        1    0.000    0.000    0.000    0.000 validation.py:68(as_float_array)


